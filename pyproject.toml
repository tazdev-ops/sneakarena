[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_backend"

[project]
name = "lmarena-bridge"
version = "3.0.0"
description = "OpenAI-compatible API bridge for LMArena with GTK4 GUI"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["lmarena", "api", "bridge", "openai", "gtk"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.30.0",
    "httpx>=0.27.0",
    "json5>=0.9.25",
    "packaging>=24.0",
    "pydantic>=2.8.0",
    "pydantic-settings>=2.4.0",
]

[project.optional-dependencies]
gui = [
    "PyGObject>=3.48.0",
]
dev = [
    "ruff>=0.6.0",
    "pre-commit>=3.7.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "mypy>=1.10.0",
    "types-requests",
]
all = ["lmarena-bridge[gui,dev]"]

[project.urls]
Homepage = "https://github.com/Lianues/LMArenaBridge"
Documentation = "https://github.com/Lianues/LMArenaBridge/blob/main/README.md"
Repository = "https://github.com/Lianues/LMArenaBridge"
Issues = "https://github.com/Lianues/LMArenaBridge/issues"

[project.scripts]
lmarena-bridge = "lmarena_bridge.main:cli"
lmarena-bridge-gui = "lmarena_bridge_gui.gtk_app:main"

[tool.setuptools.packages.find]
include = ["lmarena_bridge*", "lmarena_bridge_gui*"]

[tool.setuptools.package-data]
lmarena_bridge = ["py.typed"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "SIM", "TCH"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]